@page "/"
@using Models
@inject NavigationManager NavigationManager

<PageTitle>Game Catalog</PageTitle>

<h1>Game Catalog</h1>

<div class="row mb-4">
    <div class="col-6">
        <button type="button" class="btn btn-primary" @onclick="CreateGame">New Game</button>
    </div>
</div>

@if (games is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <DeleteGame Game="@currentGame" OnClose="@OnDeleteModalClose" />

    <table class="table table-striped table-bordered table-hover">
        <thead class="table-dark">
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Genre</th>
                <th>Price</th>
                <th>Release Date</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var game in games)
            {
                <tr>
                    <td>@game.Id</td>
                    <td>@game.Name</td>
                    <td>@game.Genre</td>
                    <td>@game.Price</td>
                    <td>@game.ReleaseDate.ToString("dd/MM/yyyy")</td>
                    <td>
                        <button class="btn btn-primary" @onclick="(() => EditGame(game.Id))">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button
                            class="btn btn-danger"
                            data-bs-toggle="modal"
                            data-bs-target="#deleteGameModal"
                            @onclick="(() => currentGame = game)"
                        >
                            <i class="bi bi-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Game[]? games;
    private Game? currentGame;

    protected override void OnInitialized()
    {
        games = GameClient.GetGames();
    }

    private void CreateGame()
    {
        NavigationManager.NavigateTo("/game");
    }

    private void EditGame(int id)
    {
        NavigationManager.NavigateTo($"/game/{id}");
    }

    private void OnDeleteModalClose(bool accepted)
    {
        if (accepted)
        {
            GameClient.DeleteGame(currentGame!.Id);
            games = GameClient.GetGames();
        }
    }
}